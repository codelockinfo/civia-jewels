<!-- Ring Size Selector Button -->
{%- if ring_size != blank -%}
  {%- liquid
    assign property_id = product.id | append: ring_size | handleize
    assign property_name = ring_size | escape
    assign property_value = property_name
    unless ring_size_hidden
      assign property_value = property_value | prepend: '_'
    endunless
  -%}
  <div class="ring-size-button" id="ringSizeButton" onclick="toggleRingSizeModal(true)">Select Ring Size</div>
  <input
    type="hidden"
    name="properties[{{ property_value }}]"
    id="{{ property_id }}"
    class="form__input form-input"
    value=""
  >
{%- endif -%}
<!-- Modal Drawer -->
<div id="ringSizeDrawer" class="ring-size-drawer-overlay">
  <div class="ring-size-drawer">
    <div class="close-btn" onclick="toggleRingSizeModal(false)">&times;</div>
    <h3 class="drawer-title">Ring Size</h3>
    <p class="drawer-desc">
      Following are the available sizes for the product. If you have any query or confusion regarding the size, contact
      our <a href="/pages/contact" style="color:#007ace;">customer support</a>.
    </p>

    <!-- Ring Size Grid -->
    <div class="ring-size-grid">
      <div class="ring-size-option dont-know">DON'T KNOW</div>
      {% assign sizes = '3,3.25,3.5,3.75,4,4.25,4.5,4.75,5,5.25,5.5,5.75,6,6.25,6.5,6.75,7,7.25,7.5,7.75,8,8.25,8.5,8.75,9,9.25,9.5,9.75,10,10.25,10.5,10.75,11,11.25,11.5,11.75,12,12.25,12.5,12.75,13'
        | split: ','
      %}
      {% for size in sizes %}
        <div class="ring-size-option">{{ size }}</div>
      {% endfor %}
    </div>
  </div>
</div>

<!-- CSS Styling -->
<style>
  .ring-size-button {
    font-size: 13px;
    padding: 12px;
    border: 1px solid #ccc;
    cursor: pointer;
    width: 100%;
    text-align: center;
    border-radius: 4px;
    background-color: #fff;
    font-weight: 400;
    margin-top: 10px;
    margin-bottom: 20px;
  }

  .ring-size-button:hover {
    color: #fff;
    background-color: #232323;
  }

  .drawer-title {
    text-align: center;
    margin-bottom: 20px;
    margin-top: 0px;
  }

  .ring-size-drawer-overlay {
    position: fixed;
    inset: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: none;
    z-index: 9999 !important;
  }

  .ring-size-drawer-overlay.active {
    display: block;
  }

  .ring-size-drawer {
    position: absolute;
    top: 0;
    right: -400px;
    width: 25%;
    height: 100%;
    background-color: #fff;
    padding: 25px 20px;
    box-shadow: -2px 0 8px rgba(0, 0, 0, 0.2);
    transition: right 0.4s ease-in-out;
    overflow-y: auto;
  }

  .ring-size-drawer-overlay.active .ring-size-drawer {
    right: 0;
  }

  .close-btn {
    position: absolute;
    top: 15px;
    right: 15px;
    font-size: 24px;
    font-weight: bold;
    cursor: pointer;
  }

  .ring-size-grid {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 10px;
    margin-top: 25px;
  }

  .ring-size-option {
    padding: 10px;
    border: 1px solid #ccc;
    text-align: center;
    border-radius: 4px;
    cursor: pointer;
    transition: background 0.3s ease;
    font-size: 14px;
  }

  .ring-size-option:hover {
    background-color: #f2f2f2;
  }

  .ring-size-option.selected {
    background-color: #232323;
    color: #fff;
    border-color: #232323;
  }

  .ring-size-option.dont-know {
    grid-column: span 2;
    font-weight: 400;
    border: 1px solid #000;
  }
</style>

<!-- JavaScript Logic -->
<script>
  function toggleRingSizeModal(show) {
    const overlay = document.getElementById('ringSizeDrawer');
    if (show) {
      overlay.classList.add('active');
    } else {
      overlay.classList.remove('active');
    }
  }

  // Close drawer when clicking outside
  window.addEventListener('click', function (event) {
    const overlay = document.getElementById('ringSizeDrawer');
    if (event.target === overlay) {
      toggleRingSizeModal(false);
    }
  });

  // Select size and close drawer
  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.ring-size-option').forEach(option => {
      option.addEventListener('click', function () {
        const size = this.textContent.trim();

        // Remove previously selected class
        document.querySelectorAll('.ring-size-option').forEach(opt => opt.classList.remove('selected'));
        this.classList.add('selected');

        // Update button text
        document.getElementById('ringSizeButton').innerText = `Ring Size: ${size}`;

        // Set hidden input value
        document.getElementById('selectedRingSize').value = size;

        // Close the drawer
        toggleRingSizeModal(false);
      });
    });
  });
</script>
